{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyOD4+VuHXTy+8fKrf1V59N+"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"cb0RWBzvj_mX","executionInfo":{"status":"ok","timestamp":1737699870373,"user_tz":-345,"elapsed":765,"user":{"displayName":"Prakash Bhandari","userId":"04274069065492051474"}},"outputId":"448ae371-6953-4a73-c985-3fc128b387f6"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["   Pregnancies  Glucose  BloodPressure  SkinThickness  Insulin   BMI  \\\n","0            6      148             72             35        0  33.6   \n","1            1       85             66             29        0  26.6   \n","2            8      183             64              0        0  23.3   \n","3            1       89             66             23       94  28.1   \n","4            0      137             40             35      168  43.1   \n","\n","   DiabetesPedigreeFunction  Age  Outcome  \n","0                     0.627   50        1  \n","1                     0.351   31        0  \n","2                     0.672   32        1  \n","3                     0.167   21        0  \n","4                     2.288   33        1  "],"text/html":["\n","  <div id=\"df-f69ab75a-d291-43ee-b959-12b5dca9e548\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Pregnancies</th>\n","      <th>Glucose</th>\n","      <th>BloodPressure</th>\n","      <th>SkinThickness</th>\n","      <th>Insulin</th>\n","      <th>BMI</th>\n","      <th>DiabetesPedigreeFunction</th>\n","      <th>Age</th>\n","      <th>Outcome</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>6</td>\n","      <td>148</td>\n","      <td>72</td>\n","      <td>35</td>\n","      <td>0</td>\n","      <td>33.6</td>\n","      <td>0.627</td>\n","      <td>50</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1</td>\n","      <td>85</td>\n","      <td>66</td>\n","      <td>29</td>\n","      <td>0</td>\n","      <td>26.6</td>\n","      <td>0.351</td>\n","      <td>31</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>8</td>\n","      <td>183</td>\n","      <td>64</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>23.3</td>\n","      <td>0.672</td>\n","      <td>32</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>1</td>\n","      <td>89</td>\n","      <td>66</td>\n","      <td>23</td>\n","      <td>94</td>\n","      <td>28.1</td>\n","      <td>0.167</td>\n","      <td>21</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>0</td>\n","      <td>137</td>\n","      <td>40</td>\n","      <td>35</td>\n","      <td>168</td>\n","      <td>43.1</td>\n","      <td>2.288</td>\n","      <td>33</td>\n","      <td>1</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-f69ab75a-d291-43ee-b959-12b5dca9e548')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-f69ab75a-d291-43ee-b959-12b5dca9e548 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-f69ab75a-d291-43ee-b959-12b5dca9e548');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-cfabdf6e-fc69-4d5a-8406-8f7641c784be\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-cfabdf6e-fc69-4d5a-8406-8f7641c784be')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-cfabdf6e-fc69-4d5a-8406-8f7641c784be button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df","summary":"{\n  \"name\": \"df\",\n  \"rows\": 768,\n  \"fields\": [\n    {\n      \"column\": \"Pregnancies\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 3,\n        \"min\": 0,\n        \"max\": 17,\n        \"num_unique_values\": 17,\n        \"samples\": [\n          6,\n          1,\n          3\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Glucose\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 31,\n        \"min\": 0,\n        \"max\": 199,\n        \"num_unique_values\": 136,\n        \"samples\": [\n          151,\n          101,\n          112\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"BloodPressure\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 19,\n        \"min\": 0,\n        \"max\": 122,\n        \"num_unique_values\": 47,\n        \"samples\": [\n          86,\n          46,\n          85\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"SkinThickness\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 15,\n        \"min\": 0,\n        \"max\": 99,\n        \"num_unique_values\": 51,\n        \"samples\": [\n          7,\n          12,\n          48\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Insulin\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 115,\n        \"min\": 0,\n        \"max\": 846,\n        \"num_unique_values\": 186,\n        \"samples\": [\n          52,\n          41,\n          183\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"BMI\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 7.8841603203754405,\n        \"min\": 0.0,\n        \"max\": 67.1,\n        \"num_unique_values\": 248,\n        \"samples\": [\n          19.9,\n          31.0,\n          38.1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"DiabetesPedigreeFunction\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.33132859501277484,\n        \"min\": 0.078,\n        \"max\": 2.42,\n        \"num_unique_values\": 517,\n        \"samples\": [\n          1.731,\n          0.426,\n          0.138\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Age\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 11,\n        \"min\": 21,\n        \"max\": 81,\n        \"num_unique_values\": 52,\n        \"samples\": [\n          60,\n          47,\n          72\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Outcome\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          0,\n          1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":253}],"source":["import pandas as pd\n","df=pd.read_csv(\"diabetes.csv\")\n","df.head()"]},{"cell_type":"code","source":["df.info()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"qoUOJScwkWfl","executionInfo":{"status":"ok","timestamp":1737699870373,"user_tz":-345,"elapsed":37,"user":{"displayName":"Prakash Bhandari","userId":"04274069065492051474"}},"outputId":"c3616aba-e757-42e4-a147-097ee172b0cc"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 768 entries, 0 to 767\n","Data columns (total 9 columns):\n"," #   Column                    Non-Null Count  Dtype  \n","---  ------                    --------------  -----  \n"," 0   Pregnancies               768 non-null    int64  \n"," 1   Glucose                   768 non-null    int64  \n"," 2   BloodPressure             768 non-null    int64  \n"," 3   SkinThickness             768 non-null    int64  \n"," 4   Insulin                   768 non-null    int64  \n"," 5   BMI                       768 non-null    float64\n"," 6   DiabetesPedigreeFunction  768 non-null    float64\n"," 7   Age                       768 non-null    int64  \n"," 8   Outcome                   768 non-null    int64  \n","dtypes: float64(2), int64(7)\n","memory usage: 54.1 KB\n"]}]},{"cell_type":"code","source":["df.describe()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":300},"id":"JZDpaNNnksME","executionInfo":{"status":"ok","timestamp":1737699870373,"user_tz":-345,"elapsed":35,"user":{"displayName":"Prakash Bhandari","userId":"04274069065492051474"}},"outputId":"6108cf9c-8fc0-473a-ed1c-20d972fb5200"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["       Pregnancies     Glucose  BloodPressure  SkinThickness     Insulin  \\\n","count   768.000000  768.000000     768.000000     768.000000  768.000000   \n","mean      3.845052  120.894531      69.105469      20.536458   79.799479   \n","std       3.369578   31.972618      19.355807      15.952218  115.244002   \n","min       0.000000    0.000000       0.000000       0.000000    0.000000   \n","25%       1.000000   99.000000      62.000000       0.000000    0.000000   \n","50%       3.000000  117.000000      72.000000      23.000000   30.500000   \n","75%       6.000000  140.250000      80.000000      32.000000  127.250000   \n","max      17.000000  199.000000     122.000000      99.000000  846.000000   \n","\n","              BMI  DiabetesPedigreeFunction         Age     Outcome  \n","count  768.000000                768.000000  768.000000  768.000000  \n","mean    31.992578                  0.471876   33.240885    0.348958  \n","std      7.884160                  0.331329   11.760232    0.476951  \n","min      0.000000                  0.078000   21.000000    0.000000  \n","25%     27.300000                  0.243750   24.000000    0.000000  \n","50%     32.000000                  0.372500   29.000000    0.000000  \n","75%     36.600000                  0.626250   41.000000    1.000000  \n","max     67.100000                  2.420000   81.000000    1.000000  "],"text/html":["\n","  <div id=\"df-75d293f5-ca26-46e5-bc91-0be0a45084ff\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Pregnancies</th>\n","      <th>Glucose</th>\n","      <th>BloodPressure</th>\n","      <th>SkinThickness</th>\n","      <th>Insulin</th>\n","      <th>BMI</th>\n","      <th>DiabetesPedigreeFunction</th>\n","      <th>Age</th>\n","      <th>Outcome</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>count</th>\n","      <td>768.000000</td>\n","      <td>768.000000</td>\n","      <td>768.000000</td>\n","      <td>768.000000</td>\n","      <td>768.000000</td>\n","      <td>768.000000</td>\n","      <td>768.000000</td>\n","      <td>768.000000</td>\n","      <td>768.000000</td>\n","    </tr>\n","    <tr>\n","      <th>mean</th>\n","      <td>3.845052</td>\n","      <td>120.894531</td>\n","      <td>69.105469</td>\n","      <td>20.536458</td>\n","      <td>79.799479</td>\n","      <td>31.992578</td>\n","      <td>0.471876</td>\n","      <td>33.240885</td>\n","      <td>0.348958</td>\n","    </tr>\n","    <tr>\n","      <th>std</th>\n","      <td>3.369578</td>\n","      <td>31.972618</td>\n","      <td>19.355807</td>\n","      <td>15.952218</td>\n","      <td>115.244002</td>\n","      <td>7.884160</td>\n","      <td>0.331329</td>\n","      <td>11.760232</td>\n","      <td>0.476951</td>\n","    </tr>\n","    <tr>\n","      <th>min</th>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.078000</td>\n","      <td>21.000000</td>\n","      <td>0.000000</td>\n","    </tr>\n","    <tr>\n","      <th>25%</th>\n","      <td>1.000000</td>\n","      <td>99.000000</td>\n","      <td>62.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>27.300000</td>\n","      <td>0.243750</td>\n","      <td>24.000000</td>\n","      <td>0.000000</td>\n","    </tr>\n","    <tr>\n","      <th>50%</th>\n","      <td>3.000000</td>\n","      <td>117.000000</td>\n","      <td>72.000000</td>\n","      <td>23.000000</td>\n","      <td>30.500000</td>\n","      <td>32.000000</td>\n","      <td>0.372500</td>\n","      <td>29.000000</td>\n","      <td>0.000000</td>\n","    </tr>\n","    <tr>\n","      <th>75%</th>\n","      <td>6.000000</td>\n","      <td>140.250000</td>\n","      <td>80.000000</td>\n","      <td>32.000000</td>\n","      <td>127.250000</td>\n","      <td>36.600000</td>\n","      <td>0.626250</td>\n","      <td>41.000000</td>\n","      <td>1.000000</td>\n","    </tr>\n","    <tr>\n","      <th>max</th>\n","      <td>17.000000</td>\n","      <td>199.000000</td>\n","      <td>122.000000</td>\n","      <td>99.000000</td>\n","      <td>846.000000</td>\n","      <td>67.100000</td>\n","      <td>2.420000</td>\n","      <td>81.000000</td>\n","      <td>1.000000</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-75d293f5-ca26-46e5-bc91-0be0a45084ff')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-75d293f5-ca26-46e5-bc91-0be0a45084ff button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-75d293f5-ca26-46e5-bc91-0be0a45084ff');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-5935b90f-3294-4ea7-847d-3982be22314c\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-5935b90f-3294-4ea7-847d-3982be22314c')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-5935b90f-3294-4ea7-847d-3982be22314c button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","summary":"{\n  \"name\": \"df\",\n  \"rows\": 8,\n  \"fields\": [\n    {\n      \"column\": \"Pregnancies\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 269.85223453356366,\n        \"min\": 0.0,\n        \"max\": 768.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          3.8450520833333335,\n          3.0,\n          768.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Glucose\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 243.73802348295857,\n        \"min\": 0.0,\n        \"max\": 768.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          120.89453125,\n          117.0,\n          768.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"BloodPressure\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 252.85250535810619,\n        \"min\": 0.0,\n        \"max\": 768.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          69.10546875,\n          72.0,\n          768.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"SkinThickness\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 263.7684730531098,\n        \"min\": 0.0,\n        \"max\": 768.0,\n        \"num_unique_values\": 7,\n        \"samples\": [\n          768.0,\n          20.536458333333332,\n          32.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Insulin\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 350.26059167945886,\n        \"min\": 0.0,\n        \"max\": 846.0,\n        \"num_unique_values\": 7,\n        \"samples\": [\n          768.0,\n          79.79947916666667,\n          127.25\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"BMI\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 262.05117817552093,\n        \"min\": 0.0,\n        \"max\": 768.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          31.992578124999998,\n          32.0,\n          768.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"DiabetesPedigreeFunction\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 271.3005221658502,\n        \"min\": 0.078,\n        \"max\": 768.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          0.47187630208333325,\n          0.3725,\n          768.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Age\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 260.1941178528413,\n        \"min\": 11.76023154067868,\n        \"max\": 768.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          33.240885416666664,\n          29.0,\n          768.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Outcome\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 271.3865920388932,\n        \"min\": 0.0,\n        \"max\": 768.0,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          0.3489583333333333,\n          1.0,\n          0.4769513772427971\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":255}]},{"cell_type":"code","source":["df.duplicated().sum()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"JASjizhpkwKq","executionInfo":{"status":"ok","timestamp":1737699870374,"user_tz":-345,"elapsed":34,"user":{"displayName":"Prakash Bhandari","userId":"04274069065492051474"}},"outputId":"e3371746-4fbb-43c8-ed6f-79ed15b6f112"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0"]},"metadata":{},"execution_count":256}]},{"cell_type":"code","source":["df.isna().sum()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":366},"id":"NjiE5xkXk1jZ","executionInfo":{"status":"ok","timestamp":1737699870374,"user_tz":-345,"elapsed":32,"user":{"displayName":"Prakash Bhandari","userId":"04274069065492051474"}},"outputId":"fe6555e8-a169-4d83-8a60-fe4c71bbae0b"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Pregnancies                 0\n","Glucose                     0\n","BloodPressure               0\n","SkinThickness               0\n","Insulin                     0\n","BMI                         0\n","DiabetesPedigreeFunction    0\n","Age                         0\n","Outcome                     0\n","dtype: int64"],"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>0</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>Pregnancies</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>Glucose</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>BloodPressure</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>SkinThickness</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>Insulin</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>BMI</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>DiabetesPedigreeFunction</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>Age</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>Outcome</th>\n","      <td>0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div><br><label><b>dtype:</b> int64</label>"]},"metadata":{},"execution_count":257}]},{"cell_type":"code","source":["df.corr()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":351},"id":"wZKSWTIpk6mM","executionInfo":{"status":"ok","timestamp":1737699870374,"user_tz":-345,"elapsed":30,"user":{"displayName":"Prakash Bhandari","userId":"04274069065492051474"}},"outputId":"b3e52dd8-3274-4f80-e0c3-600a028ce58b"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                          Pregnancies   Glucose  BloodPressure  SkinThickness  \\\n","Pregnancies                  1.000000  0.129459       0.141282      -0.081672   \n","Glucose                      0.129459  1.000000       0.152590       0.057328   \n","BloodPressure                0.141282  0.152590       1.000000       0.207371   \n","SkinThickness               -0.081672  0.057328       0.207371       1.000000   \n","Insulin                     -0.073535  0.331357       0.088933       0.436783   \n","BMI                          0.017683  0.221071       0.281805       0.392573   \n","DiabetesPedigreeFunction    -0.033523  0.137337       0.041265       0.183928   \n","Age                          0.544341  0.263514       0.239528      -0.113970   \n","Outcome                      0.221898  0.466581       0.065068       0.074752   \n","\n","                           Insulin       BMI  DiabetesPedigreeFunction  \\\n","Pregnancies              -0.073535  0.017683                 -0.033523   \n","Glucose                   0.331357  0.221071                  0.137337   \n","BloodPressure             0.088933  0.281805                  0.041265   \n","SkinThickness             0.436783  0.392573                  0.183928   \n","Insulin                   1.000000  0.197859                  0.185071   \n","BMI                       0.197859  1.000000                  0.140647   \n","DiabetesPedigreeFunction  0.185071  0.140647                  1.000000   \n","Age                      -0.042163  0.036242                  0.033561   \n","Outcome                   0.130548  0.292695                  0.173844   \n","\n","                               Age   Outcome  \n","Pregnancies               0.544341  0.221898  \n","Glucose                   0.263514  0.466581  \n","BloodPressure             0.239528  0.065068  \n","SkinThickness            -0.113970  0.074752  \n","Insulin                  -0.042163  0.130548  \n","BMI                       0.036242  0.292695  \n","DiabetesPedigreeFunction  0.033561  0.173844  \n","Age                       1.000000  0.238356  \n","Outcome                   0.238356  1.000000  "],"text/html":["\n","  <div id=\"df-62f96c84-e642-489f-b49a-364fb9e19d71\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Pregnancies</th>\n","      <th>Glucose</th>\n","      <th>BloodPressure</th>\n","      <th>SkinThickness</th>\n","      <th>Insulin</th>\n","      <th>BMI</th>\n","      <th>DiabetesPedigreeFunction</th>\n","      <th>Age</th>\n","      <th>Outcome</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>Pregnancies</th>\n","      <td>1.000000</td>\n","      <td>0.129459</td>\n","      <td>0.141282</td>\n","      <td>-0.081672</td>\n","      <td>-0.073535</td>\n","      <td>0.017683</td>\n","      <td>-0.033523</td>\n","      <td>0.544341</td>\n","      <td>0.221898</td>\n","    </tr>\n","    <tr>\n","      <th>Glucose</th>\n","      <td>0.129459</td>\n","      <td>1.000000</td>\n","      <td>0.152590</td>\n","      <td>0.057328</td>\n","      <td>0.331357</td>\n","      <td>0.221071</td>\n","      <td>0.137337</td>\n","      <td>0.263514</td>\n","      <td>0.466581</td>\n","    </tr>\n","    <tr>\n","      <th>BloodPressure</th>\n","      <td>0.141282</td>\n","      <td>0.152590</td>\n","      <td>1.000000</td>\n","      <td>0.207371</td>\n","      <td>0.088933</td>\n","      <td>0.281805</td>\n","      <td>0.041265</td>\n","      <td>0.239528</td>\n","      <td>0.065068</td>\n","    </tr>\n","    <tr>\n","      <th>SkinThickness</th>\n","      <td>-0.081672</td>\n","      <td>0.057328</td>\n","      <td>0.207371</td>\n","      <td>1.000000</td>\n","      <td>0.436783</td>\n","      <td>0.392573</td>\n","      <td>0.183928</td>\n","      <td>-0.113970</td>\n","      <td>0.074752</td>\n","    </tr>\n","    <tr>\n","      <th>Insulin</th>\n","      <td>-0.073535</td>\n","      <td>0.331357</td>\n","      <td>0.088933</td>\n","      <td>0.436783</td>\n","      <td>1.000000</td>\n","      <td>0.197859</td>\n","      <td>0.185071</td>\n","      <td>-0.042163</td>\n","      <td>0.130548</td>\n","    </tr>\n","    <tr>\n","      <th>BMI</th>\n","      <td>0.017683</td>\n","      <td>0.221071</td>\n","      <td>0.281805</td>\n","      <td>0.392573</td>\n","      <td>0.197859</td>\n","      <td>1.000000</td>\n","      <td>0.140647</td>\n","      <td>0.036242</td>\n","      <td>0.292695</td>\n","    </tr>\n","    <tr>\n","      <th>DiabetesPedigreeFunction</th>\n","      <td>-0.033523</td>\n","      <td>0.137337</td>\n","      <td>0.041265</td>\n","      <td>0.183928</td>\n","      <td>0.185071</td>\n","      <td>0.140647</td>\n","      <td>1.000000</td>\n","      <td>0.033561</td>\n","      <td>0.173844</td>\n","    </tr>\n","    <tr>\n","      <th>Age</th>\n","      <td>0.544341</td>\n","      <td>0.263514</td>\n","      <td>0.239528</td>\n","      <td>-0.113970</td>\n","      <td>-0.042163</td>\n","      <td>0.036242</td>\n","      <td>0.033561</td>\n","      <td>1.000000</td>\n","      <td>0.238356</td>\n","    </tr>\n","    <tr>\n","      <th>Outcome</th>\n","      <td>0.221898</td>\n","      <td>0.466581</td>\n","      <td>0.065068</td>\n","      <td>0.074752</td>\n","      <td>0.130548</td>\n","      <td>0.292695</td>\n","      <td>0.173844</td>\n","      <td>0.238356</td>\n","      <td>1.000000</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-62f96c84-e642-489f-b49a-364fb9e19d71')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-62f96c84-e642-489f-b49a-364fb9e19d71 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-62f96c84-e642-489f-b49a-364fb9e19d71');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-7730a92e-d74c-445c-b8f0-fc7aa804e173\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-7730a92e-d74c-445c-b8f0-fc7aa804e173')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-7730a92e-d74c-445c-b8f0-fc7aa804e173 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","summary":"{\n  \"name\": \"df\",\n  \"rows\": 9,\n  \"fields\": [\n    {\n      \"column\": \"Pregnancies\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.3551273944830802,\n        \"min\": -0.08167177444900726,\n        \"max\": 1.0,\n        \"num_unique_values\": 9,\n        \"samples\": [\n          0.5443412284023392,\n          0.12945867149927248,\n          0.017683090727830565\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Glucose\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.28767750976254863,\n        \"min\": 0.05732789073817692,\n        \"max\": 1.0,\n        \"num_unique_values\": 9,\n        \"samples\": [\n          0.26351431982433343,\n          1.0,\n          0.2210710694589828\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"BloodPressure\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.2937568072929426,\n        \"min\": 0.04126494793009856,\n        \"max\": 1.0,\n        \"num_unique_values\": 9,\n        \"samples\": [\n          0.23952794642136344,\n          0.1525895865686646,\n          0.2818052888499109\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"SkinThickness\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.34155040316543445,\n        \"min\": -0.11397026236774152,\n        \"max\": 1.0,\n        \"num_unique_values\": 9,\n        \"samples\": [\n          -0.11397026236774152,\n          0.05732789073817692,\n          0.39257320415903835\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Insulin\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.3242652539286031,\n        \"min\": -0.07353461435162822,\n        \"max\": 1.0,\n        \"num_unique_values\": 9,\n        \"samples\": [\n          -0.04216295473537695,\n          0.3313571099202092,\n          0.19785905649310145\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"BMI\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.29340599982594495,\n        \"min\": 0.017683090727830565,\n        \"max\": 1.0,\n        \"num_unique_values\": 9,\n        \"samples\": [\n          0.03624187009229395,\n          0.2210710694589828,\n          1.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"DiabetesPedigreeFunction\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.30733070822371455,\n        \"min\": -0.03352267296261304,\n        \"max\": 1.0,\n        \"num_unique_values\": 9,\n        \"samples\": [\n          0.03356131243480539,\n          0.13733729982837092,\n          0.14064695254510523\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Age\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.34634737835147417,\n        \"min\": -0.11397026236774152,\n        \"max\": 1.0,\n        \"num_unique_values\": 9,\n        \"samples\": [\n          1.0,\n          0.26351431982433343,\n          0.03624187009229395\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Outcome\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.2911432844711856,\n        \"min\": 0.06506835955033277,\n        \"max\": 1.0,\n        \"num_unique_values\": 9,\n        \"samples\": [\n          0.23835598302719757,\n          0.46658139830687373,\n          0.2926946626444454\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":258}]},{"cell_type":"code","source":["plt.figure(figsize=(10, 6))\n","ax = sns.countplot(x=\"Outcome\", data=df, palette=[\"g\", \"r\"])\n","ax.set_title(\"The people who have diabetes and who do not\")\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":671},"id":"xNmeAvtPlCw8","executionInfo":{"status":"ok","timestamp":1737699871933,"user_tz":-345,"elapsed":33,"user":{"displayName":"Prakash Bhandari","userId":"04274069065492051474"}},"outputId":"68e12b7f-d820-4712-e4fe-6538c22a5d58"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stderr","text":["<ipython-input-260-f84deaa66e26>:2: FutureWarning: \n","\n","Passing `palette` without assigning `hue` is deprecated and will be removed in v0.14.0. Assign the `x` variable to `hue` and set `legend=False` for the same effect.\n","\n","  ax = sns.countplot(x=\"Outcome\", data=df, palette=[\"g\", \"r\"])\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 1000x600 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["import seaborn as sns\n","import matplotlib.pyplot as plt\n","sns.heatmap(df.corr(),annot=True,fmt=\"0.1f\",linewidths=.5)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":620},"id":"9WmdiJayk94r","executionInfo":{"status":"ok","timestamp":1737699871932,"user_tz":-345,"elapsed":1586,"user":{"displayName":"Prakash Bhandari","userId":"04274069065492051474"}},"outputId":"36c19062-3343-4251-d2ad-f58adf2fa0a1"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<Axes: >"]},"metadata":{},"execution_count":259},{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 2 Axes>"],"image/png":"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\n"},"metadata":{}}]},{"cell_type":"code","source":["from sklearn.model_selection import train_test_split\n","from sklearn.linear_model import LogisticRegression,LinearRegression\n","# x=df[[\"BloodPressure\",\"BMI\",\"Age\",\"Glucose\",\"SkinThickness\",\"Insulin\",\"DiabetesPedigreeFunction\"]]\n","x=df[[\"BloodPressure\",\"BMI\",\"Age\",\"Glucose\"]]\n","y=df.Outcome\n","x_train, x_test,y_train ,y_test=train_test_split(x,y,test_size=.2)\n","from sklearn.preprocessing import StandardScaler\n","# scaler=StandardScaler()\n","# x_train=scaler.fit_transform(x_train)\n","# x_test=scaler.transform(x_test)\n","model=LogisticRegression()\n","model.fit(x_train,y_train)\n","y_pred=model.predict(x_test)\n","from sklearn.metrics import accuracy_score\n","print(accuracy_score(y_test,y_pred)*100)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"rnhj-Gc5lYh4","executionInfo":{"status":"ok","timestamp":1737699871933,"user_tz":-345,"elapsed":30,"user":{"displayName":"Prakash Bhandari","userId":"04274069065492051474"}},"outputId":"ae5703a8-3714-4c4d-a2a1-55cad1aa310a"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["74.67532467532467\n"]}]},{"cell_type":"code","source":["model.score(x_train,y_train)*100"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"3WrbySz0m91t","executionInfo":{"status":"ok","timestamp":1737699871933,"user_tz":-345,"elapsed":28,"user":{"displayName":"Prakash Bhandari","userId":"04274069065492051474"}},"outputId":"e1925dbc-c7d7-443e-fe5d-da7c88542b79"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["77.36156351791531"]},"metadata":{},"execution_count":262}]},{"cell_type":"code","source":["model.score(x_test,y_test)*100"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"r3Z0FlFhnFZA","executionInfo":{"status":"ok","timestamp":1737699871933,"user_tz":-345,"elapsed":27,"user":{"displayName":"Prakash Bhandari","userId":"04274069065492051474"}},"outputId":"cf98d3cb-b402-474d-d790-50fc959987c0"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["74.67532467532467"]},"metadata":{},"execution_count":263}]},{"cell_type":"code","source":["model.predict([[66,28.1,21,89]])"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"ygmZmIYc1euk","executionInfo":{"status":"ok","timestamp":1737699871933,"user_tz":-345,"elapsed":24,"user":{"displayName":"Prakash Bhandari","userId":"04274069065492051474"}},"outputId":"22a8b605-2207-4cba-d68c-14f9d76b68cf"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/validation.py:2739: UserWarning: X does not have valid feature names, but LogisticRegression was fitted with feature names\n","  warnings.warn(\n"]},{"output_type":"execute_result","data":{"text/plain":["array([0])"]},"metadata":{},"execution_count":264}]},{"cell_type":"code","source":["import joblib\n","joblib.dump(model,\"diabetic100.pkl\")\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"4vwyuL0BnI3u","executionInfo":{"status":"ok","timestamp":1737699872374,"user_tz":-345,"elapsed":463,"user":{"displayName":"Prakash Bhandari","userId":"04274069065492051474"}},"outputId":"1175a160-d0d2-4b47-f0f1-fa7d46e98880"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["['diabetic100.pkl']"]},"metadata":{},"execution_count":265}]},{"cell_type":"code","source":[],"metadata":{"id":"NW5oIL7huWw5"},"execution_count":null,"outputs":[]}]}